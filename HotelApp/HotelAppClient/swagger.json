{
  "openapi": "3.0.1",
  "info": {
    "title": "HotelAppServer",
    "version": "1.0"
  },
  "paths": {
    "/api/Bookings": {
      "get": {
        "tags": [
          "Bookings"
        ],
        "summary": "Get all bookings",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookingGetDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookingGetDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookingGetDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Bookings"
        ],
        "summary": "Adds a new booking to a database",
        "requestBody": {
          "description": "booking",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BookingPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BookingGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingGetDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Bookings/{id}": {
      "get": {
        "tags": [
          "Bookings"
        ],
        "summary": "Get booking by its id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BookingGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingGetDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Bookings"
        ],
        "summary": "Updates booking in database",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "booking",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BookingPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Bookings"
        ],
        "summary": "Deletes booking from database",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Clients": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Returns list of all clients",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientGetDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientGetDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientGetDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Clients"
        ],
        "summary": "Adds a client to repository",
        "requestBody": {
          "description": "client",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClientPostDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          }
        }
      }
    },
    "/api/Clients/{id}": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Returns the client by its id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ClientGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientGetDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Clients"
        ],
        "summary": "Updates a person in repository",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "client",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClientPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Clients"
        ],
        "summary": "Deletes client from collection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Hotels": {
      "get": {
        "tags": [
          "Hotels"
        ],
        "summary": "Get all hotels",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HotelGetDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HotelGetDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HotelGetDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Hotels"
        ],
        "summary": "Adds a new hotel to the database",
        "requestBody": {
          "description": "hotel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HotelPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HotelPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HotelPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HotelGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HotelGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HotelGetDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Hotels/{id}": {
      "get": {
        "tags": [
          "Hotels"
        ],
        "summary": "Get hotel by its id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HotelGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HotelGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HotelGetDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Hotels"
        ],
        "summary": "Updates existing hotel in database",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "hotel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HotelPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HotelPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HotelPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Hotels"
        ],
        "summary": "Deletes hotel from database",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Query/all_hotels": {
      "get": {
        "tags": [
          "Query"
        ],
        "summary": "Returns information about all hotels",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HotelGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HotelGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HotelGetDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Query/hotel_clients/{id}": {
      "get": {
        "tags": [
          "Query"
        ],
        "summary": "Returns list of clients of hotel with given id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientGetDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientGetDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientGetDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Query/top5": {
      "get": {
        "tags": [
          "Query"
        ],
        "summary": "Returns 5 most booked hotels",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Query/available_rooms/{city}": {
      "get": {
        "tags": [
          "Query"
        ],
        "summary": "Returns list of available rooms in given city",
        "parameters": [
          {
            "name": "city",
            "in": "path",
            "description": "city",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Query/clients_with_longest_bookings": {
      "get": {
        "tags": [
          "Query"
        ],
        "summary": "Returns list of clients who booked room with longest booking period",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientGetDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientGetDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientGetDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Query/prices": {
      "get": {
        "tags": [
          "Query"
        ],
        "summary": "Returns minimum, maximum and average room price for each hotel",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Rooms": {
      "get": {
        "tags": [
          "Rooms"
        ],
        "summary": "Gets all rooms",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoomGetDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoomGetDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoomGetDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Rooms"
        ],
        "summary": "Adds a new room to the database",
        "requestBody": {
          "description": "room",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoomPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RoomPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RoomPostDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              }
            }
          }
        }
      }
    },
    "/api/Rooms/{id}": {
      "get": {
        "tags": [
          "Rooms"
        ],
        "summary": "Gets room by its id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RoomGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoomGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoomGetDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Rooms"
        ],
        "summary": "Updates existing room in database",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "room",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoomPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RoomPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RoomPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Rooms"
        ],
        "summary": "Deletes room from database",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Booking": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "roomId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "clientId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "checkInDate": {
            "type": "string",
            "format": "date-time"
          },
          "bookingPeriodInDays": {
            "type": "integer",
            "format": "int32"
          },
          "departureDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BookingGetDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id - uint typed value for storing Id of the booked room",
            "format": "int32"
          },
          "roomId": {
            "type": "integer",
            "description": "RoomId value represents an id of type of the booked room",
            "format": "int32"
          },
          "clientId": {
            "type": "integer",
            "description": "ClientId value represents a id of person who booked the room",
            "format": "int32"
          },
          "checkInDate": {
            "type": "string",
            "description": "CheckInDate - DateTime typed value for storing a date of checking-in",
            "format": "date-time"
          },
          "bookingPeriodInDays": {
            "type": "integer",
            "description": "BookingPeriodInDays double typed value representing an amount of days between check-in and departure",
            "format": "int32"
          },
          "departureDate": {
            "type": "string",
            "description": "DepartureDate - DateTime typed value representing a departure date",
            "format": "date-time",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "BookingGetDto for getting Booking value from repository"
      },
      "BookingPostDto": {
        "type": "object",
        "properties": {
          "roomId": {
            "type": "integer",
            "description": "RoomId value represents an id of type of the booked room",
            "format": "int32"
          },
          "clientId": {
            "type": "integer",
            "description": "ClientId value represents a id of person who booked the room",
            "format": "int32"
          },
          "checkInDate": {
            "type": "string",
            "description": "CheckInDate - DateTime typed value for storing a date of checking-in",
            "format": "date-time"
          },
          "bookingPeriodInDays": {
            "type": "integer",
            "description": "BookingPeriodInDays double typed value representing an amount of days between check-in and departure",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "BookingPostDto for posting Booking type"
      },
      "Client": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "passport": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "surname": {
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "format": "date-time"
          },
          "bookings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Booking"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClientGetDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id - uint typed value for storing Id of the client",
            "format": "int32"
          },
          "passport": {
            "type": "string",
            "description": "Passport - a string representing passport number",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "FirstName - a string representing person's name",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "LastName - a string representing person's last name",
            "nullable": true
          },
          "surname": {
            "type": "string",
            "description": "Surname - a string representing person's surname",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "description": "BirthDate - DateTime typed value for storing birth date of person",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Client class without bookings list"
      },
      "ClientPostDto": {
        "type": "object",
        "properties": {
          "passport": {
            "type": "string",
            "description": "Passport - a string representing passport number",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "FirstName - a string value representing person's name",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "LastName - a string value representing person's last name",
            "nullable": true
          },
          "surname": {
            "type": "string",
            "description": "Surname - a string value representing person's surname",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "description": "BirthDate - DateTime typed value for storing birth date of person",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Client class without id and bookings list"
      },
      "HotelGetDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id - uint typed value for storing Id of the client",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name - string value for name of the hotel",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City - string value for city name of the hotel",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "Address - string value for address where the hotel is",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "HotelGetDto for getting Hotel value from repository"
      },
      "HotelPostDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name - string value for name of the hotel",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City - string value for city name of the hotel",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "Address - string value for address where the hotel is",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "HotelPostDto for adding Hotel typed values to repository"
      },
      "Room": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "hotelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "cost": {
            "type": "integer",
            "format": "int32"
          },
          "bookings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Booking"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RoomGetDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id - guid typed value for storing Id of the room",
            "format": "int32"
          },
          "hotelId": {
            "type": "integer",
            "description": "Hotel Id where room is",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "description": "Type - string typed value representing a type of the room",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "description": "Amount - uint value for storing an amount of rooms of this type",
            "format": "int32"
          },
          "cost": {
            "type": "integer",
            "description": "Cost - uint for storing a cost of the room",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "RoomGetDto for getting room instances"
      },
      "RoomPostDto": {
        "type": "object",
        "properties": {
          "hotelId": {
            "type": "integer",
            "description": "Hotel Id where room is",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "description": "Type - string typed value representing a type of the room",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "description": "Amount - uint value for storing an amount of rooms of this type",
            "format": "int32"
          },
          "cost": {
            "type": "integer",
            "description": "Cost - uint for storing a cost of the room",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "RoomPostDto for posting value with Room type"
      }
    }
  }
}