{
  "openapi": "3.0.1",
  "info": {
    "title": "RentalService.Server",
    "version": "1.0"
  },
  "paths": {
    "/api/Client": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Get method which returns all clients",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientGetDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientGetDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientGetDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Client"
        ],
        "summary": "Post method which add new client",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClientPostDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ClientGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientGetDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Client/{id}": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Get method which returns clients by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ClientGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientGetDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Client"
        ],
        "summary": "Put method for changing data in the client table",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClientPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Client"
        ],
        "summary": "Delete method for deleting a client",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/IssuedCar": {
      "get": {
        "tags": [
          "IssuedCar"
        ],
        "summary": "Get method which returns all issued cars",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IssuedCar"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IssuedCar"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IssuedCar"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "IssuedCar"
        ],
        "summary": "Post method which add new issued car",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IssuedCarPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IssuedCarPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IssuedCarPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IssuedCar"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssuedCar"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssuedCar"
                }
              }
            }
          }
        }
      }
    },
    "/api/IssuedCar/{id}": {
      "get": {
        "tags": [
          "IssuedCar"
        ],
        "summary": "Get method which returns issued car by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IssuedCar"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssuedCar"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssuedCar"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "IssuedCar"
        ],
        "summary": "Put method for changing data in the issued car table",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IssuedCarPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IssuedCarPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IssuedCarPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "IssuedCar"
        ],
        "summary": "Delete method for deleting a issued car",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/RefundInformation": {
      "get": {
        "tags": [
          "RefundInformation"
        ],
        "summary": "Get method which returns all refund information",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RefundInformation"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RefundInformation"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RefundInformation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "RefundInformation"
        ],
        "summary": "Post method which add new refund information",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefundInformationPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RefundInformationPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RefundInformationPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RefundInformation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefundInformation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefundInformation"
                }
              }
            }
          }
        }
      }
    },
    "/api/RefundInformation/{id}": {
      "get": {
        "tags": [
          "RefundInformation"
        ],
        "summary": "Get method which returns refund information by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RefundInformation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefundInformation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefundInformation"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "RefundInformation"
        ],
        "summary": "Put method for changing data in the refund information table",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefundInformationPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RefundInformationPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RefundInformationPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "RefundInformation"
        ],
        "summary": "Delete method for deleting a refund information",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/RentalInformation": {
      "get": {
        "tags": [
          "RentalInformation"
        ],
        "summary": "Get method which returns all rental information",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RentalInformation"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RentalInformation"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RentalInformation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "RentalInformation"
        ],
        "summary": "Post method which add new rental information",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RentalInformationPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RentalInformationPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RentalInformationPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RentalInformation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RentalInformation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RentalInformation"
                }
              }
            }
          }
        }
      }
    },
    "/api/RentalInformation/{id}": {
      "get": {
        "tags": [
          "RentalInformation"
        ],
        "summary": "Get method which returns rental information by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RentalInformation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RentalInformation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RentalInformation"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "RentalInformation"
        ],
        "summary": "Put method for changing data in the rental information table",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RentalInformationPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RentalInformationPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RentalInformationPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "RentalInformation"
        ],
        "summary": "Delete method for deleting a rental information",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/RentalPoint": {
      "get": {
        "tags": [
          "RentalPoint"
        ],
        "summary": "Get method which returns all rental points",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RentalPointGetDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RentalPointGetDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RentalPointGetDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "RentalPoint"
        ],
        "summary": "Post method which add new rental point",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RentalPointPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RentalPointPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RentalPointPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RentalPointGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RentalPointGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RentalPointGetDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/RentalPoint/{id}": {
      "get": {
        "tags": [
          "RentalPoint"
        ],
        "summary": "Get method which returns rental point by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RentalPointGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RentalPointGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RentalPointGetDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "RentalPoint"
        ],
        "summary": "Put method for changing data in the rental point table",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RentalPointPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RentalPointPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RentalPointPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "RentalPoint"
        ],
        "summary": "Delete method for deleting a rental point",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Request/vehicles": {
      "get": {
        "tags": [
          "Request"
        ],
        "summary": "Get information about vehicles",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VehicleGetDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VehicleGetDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VehicleGetDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Request/clients_by_model_id/{id}": {
      "get": {
        "tags": [
          "Request"
        ],
        "summary": "Get information about clients who took the car with the specified identifier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ClientGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientGetDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Request/cars_for_rent": {
      "get": {
        "tags": [
          "Request"
        ],
        "summary": "Get information about cars that are rented",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VehicleGetDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VehicleGetDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VehicleGetDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Request/top_five_frequently_rented_vehicles": {
      "get": {
        "tags": [
          "Request"
        ],
        "summary": "Get information about the top 5 most frequently rented cars",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Request/number_of_leases_for_each_car": {
      "get": {
        "tags": [
          "Request"
        ],
        "summary": "Get the number of leases for each car",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Request/top_car_rental_locations": {
      "get": {
        "tags": [
          "Request"
        ],
        "summary": "Get information about rental locations where cars have been rented the maximum number of times,\r\narrange by name",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Vehicle": {
      "get": {
        "tags": [
          "Vehicle"
        ],
        "summary": "Get method which returns all vehicles",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VehicleGetDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VehicleGetDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VehicleGetDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Vehicle"
        ],
        "summary": "Post method which add new vehicle",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VehiclePostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VehiclePostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VehiclePostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleGetDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Vehicle/{id}": {
      "get": {
        "tags": [
          "Vehicle"
        ],
        "summary": "Get method which returns vehicle by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleGetDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Vehicle"
        ],
        "summary": "Put method for changing data in the vehicle table",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VehiclePostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VehiclePostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VehiclePostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Vehicle"
        ],
        "summary": "Delete method for deleting a vehicle",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/VehicleModel": {
      "get": {
        "tags": [
          "VehicleModel"
        ],
        "summary": "Get method which returns all vehicle models",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VehicleModelGetDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VehicleModelGetDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VehicleModelGetDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "VehicleModel"
        ],
        "summary": "Post method which add new vehicle model",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VehicleModelPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VehicleModelPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VehicleModelPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleModelGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleModelGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleModelGetDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/VehicleModel/{id}": {
      "get": {
        "tags": [
          "VehicleModel"
        ],
        "summary": "Get method which returns vehicle model by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleModelGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleModelGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleModelGetDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "VehicleModel"
        ],
        "summary": "Put method for changing data in the vehicle model table",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VehicleModelPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VehicleModelPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VehicleModelPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "VehicleModel"
        ],
        "summary": "Delete method for deleting a vehicle model",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ClientGetDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id - unique client identifier",
            "format": "int64"
          },
          "lastName": {
            "type": "string",
            "description": "LastName - information about the client's last name",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "FirstName - information about the client's first name",
            "nullable": true
          },
          "patronymic": {
            "type": "string",
            "description": "Patronymic - information about the client's patronymic",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "description": "BirthDate - date and time of birth",
            "format": "date-time"
          },
          "passport": {
            "type": "string",
            "description": "Passport - passport series and number",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClientPostDto": {
        "type": "object",
        "properties": {
          "lastName": {
            "type": "string",
            "description": "LastName - information about the client's last name",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "FirstName - information about the client's first name",
            "nullable": true
          },
          "patronymic": {
            "type": "string",
            "description": "Patronymic - information about the client's patronymic",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "description": "BirthDate - date and time of birth",
            "format": "date-time"
          },
          "passport": {
            "type": "string",
            "description": "Passport - passport series and number",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IssuedCar": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "vehicleId": {
            "type": "integer",
            "format": "int64"
          },
          "clientId": {
            "type": "integer",
            "format": "int64"
          },
          "rentalInformationId": {
            "type": "integer",
            "format": "int64"
          },
          "refundInformationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IssuedCarPostDto": {
        "type": "object",
        "properties": {
          "vehicleId": {
            "type": "integer",
            "description": "VehicleId - identifier of the rented car",
            "format": "int64"
          },
          "clientId": {
            "type": "integer",
            "description": "ClientId - identifier  of the client",
            "format": "int64"
          },
          "rentalInformationId": {
            "type": "integer",
            "description": "RentalInformationId - identifier of the rental information",
            "format": "int64"
          },
          "refundInformationId": {
            "type": "integer",
            "description": "RefundInformationId - identifier of the refund information",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RefundInformation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "rentalPointId": {
            "type": "integer",
            "format": "int64"
          },
          "refundDate": {
            "type": "string",
            "format": "date-time"
          },
          "issuedCarId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RefundInformationPostDto": {
        "type": "object",
        "properties": {
          "rentalPointId": {
            "type": "integer",
            "description": "RefundPointId - identifier of the rental point",
            "format": "int64"
          },
          "refundDate": {
            "type": "string",
            "description": "RefundDate - when the car was rented",
            "format": "date-time"
          },
          "issuedCarId": {
            "type": "integer",
            "description": "IssuedCarId - identifier of the machine that contains information about the return",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RentalInformation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "rentalPointId": {
            "type": "integer",
            "format": "int64"
          },
          "rentalDate": {
            "type": "string",
            "format": "date-time"
          },
          "rentalPeriod": {
            "type": "integer",
            "format": "int64"
          },
          "issuedCarId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RentalInformationPostDto": {
        "type": "object",
        "properties": {
          "rentalPointId": {
            "type": "integer",
            "description": "RentalPointId - identifier of the rental point",
            "format": "int64"
          },
          "rentalDate": {
            "type": "string",
            "description": "RentalDate - when the car was rented",
            "format": "date-time"
          },
          "rentalPeriod": {
            "type": "integer",
            "description": "RentalPeriod - for what time the car was rented (in days)",
            "format": "int64"
          },
          "issuedCarId": {
            "type": "integer",
            "description": "IssuedCarId - identifier of the rental car that contains the information",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RentalPointGetDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id - unique client identifier",
            "format": "int64"
          },
          "title": {
            "type": "string",
            "description": "Title - name of the rental point",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "Address - the address where the rental point is located",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RentalPointPostDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title - name of the rental point",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "Address - the address where the rental point is located",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VehicleGetDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id - unique client identifier",
            "format": "int64"
          },
          "number": {
            "type": "string",
            "description": "Number - unique car number",
            "nullable": true
          },
          "vehicleModelId": {
            "type": "integer",
            "description": "Model - contains the identifier of the car model",
            "format": "int64"
          },
          "colour": {
            "type": "string",
            "description": "Colour - car colour",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VehicleModelGetDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id - unique Model identifier",
            "format": "int64"
          },
          "model": {
            "type": "string",
            "description": "Model - car model",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "description": "Brand - car brand",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VehicleModelPostDto": {
        "type": "object",
        "properties": {
          "model": {
            "type": "string",
            "description": "Model - car model",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "description": "Brand - car brand",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VehiclePostDto": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "Number - unique car number",
            "nullable": true
          },
          "vehicleModelId": {
            "type": "integer",
            "description": "Model - contains the identifier of the car model",
            "format": "int64"
          },
          "colour": {
            "type": "string",
            "description": "Colour - car colour",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}