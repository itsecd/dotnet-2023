/* 
 * RentalService.Server
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing RentalInformationApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class RentalInformationApiTests
    {
        private RentalInformationApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new RentalInformationApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of RentalInformationApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' RentalInformationApi
            //Assert.IsInstanceOf(typeof(RentalInformationApi), instance);
        }

        
        /// <summary>
        /// Test ApiRentalInformationGet
        /// </summary>
        [Test]
        public void ApiRentalInformationGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ApiRentalInformationGet();
            //Assert.IsInstanceOf(typeof(List<RentalInformation>), response, "response is List<RentalInformation>");
        }
        
        /// <summary>
        /// Test ApiRentalInformationIdDelete
        /// </summary>
        [Test]
        public void ApiRentalInformationIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long id = null;
            //instance.ApiRentalInformationIdDelete(id);
            
        }
        
        /// <summary>
        /// Test ApiRentalInformationIdGet
        /// </summary>
        [Test]
        public void ApiRentalInformationIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long id = null;
            //var response = instance.ApiRentalInformationIdGet(id);
            //Assert.IsInstanceOf(typeof(RentalInformation), response, "response is RentalInformation");
        }
        
        /// <summary>
        /// Test ApiRentalInformationIdPut
        /// </summary>
        [Test]
        public void ApiRentalInformationIdPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long id = null;
            //RentalInformationPostDto rentalInformationPostDto = null;
            //instance.ApiRentalInformationIdPut(id, rentalInformationPostDto);
            
        }
        
        /// <summary>
        /// Test ApiRentalInformationPost
        /// </summary>
        [Test]
        public void ApiRentalInformationPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RentalInformationPostDto rentalInformationPostDto = null;
            //var response = instance.ApiRentalInformationPost(rentalInformationPostDto);
            //Assert.IsInstanceOf(typeof(RentalInformation), response, "response is RentalInformation");
        }
        
    }

}
