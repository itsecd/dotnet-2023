/* 
 * RentalService.Server
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// IssuedCarPostDto
    /// </summary>
    [DataContract]
    public partial class IssuedCarPostDto :  IEquatable<IssuedCarPostDto>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="IssuedCarPostDto" /> class.
        /// </summary>
        /// <param name="vehicleId">VehicleId - identifier of the rented car.</param>
        /// <param name="clientId">ClientId - identifier  of the client.</param>
        /// <param name="rentalInformationId">RentalInformationId - identifier of the rental information.</param>
        /// <param name="refundInformationId">RefundInformationId - identifier of the refund information.</param>
        public IssuedCarPostDto(long vehicleId = default(long), long clientId = default(long), long rentalInformationId = default(long), long? refundInformationId = default(long?))
        {
            this.RefundInformationId = refundInformationId;
            this.VehicleId = vehicleId;
            this.ClientId = clientId;
            this.RentalInformationId = rentalInformationId;
            this.RefundInformationId = refundInformationId;
        }
        
        /// <summary>
        /// VehicleId - identifier of the rented car
        /// </summary>
        /// <value>VehicleId - identifier of the rented car</value>
        [DataMember(Name="vehicleId", EmitDefaultValue=false)]
        public long VehicleId { get; set; }

        /// <summary>
        /// ClientId - identifier  of the client
        /// </summary>
        /// <value>ClientId - identifier  of the client</value>
        [DataMember(Name="clientId", EmitDefaultValue=false)]
        public long ClientId { get; set; }

        /// <summary>
        /// RentalInformationId - identifier of the rental information
        /// </summary>
        /// <value>RentalInformationId - identifier of the rental information</value>
        [DataMember(Name="rentalInformationId", EmitDefaultValue=false)]
        public long RentalInformationId { get; set; }

        /// <summary>
        /// RefundInformationId - identifier of the refund information
        /// </summary>
        /// <value>RefundInformationId - identifier of the refund information</value>
        [DataMember(Name="refundInformationId", EmitDefaultValue=true)]
        public long? RefundInformationId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class IssuedCarPostDto {\n");
            sb.Append("  VehicleId: ").Append(VehicleId).Append("\n");
            sb.Append("  ClientId: ").Append(ClientId).Append("\n");
            sb.Append("  RentalInformationId: ").Append(RentalInformationId).Append("\n");
            sb.Append("  RefundInformationId: ").Append(RefundInformationId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as IssuedCarPostDto);
        }

        /// <summary>
        /// Returns true if IssuedCarPostDto instances are equal
        /// </summary>
        /// <param name="input">Instance of IssuedCarPostDto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(IssuedCarPostDto input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.VehicleId == input.VehicleId ||
                    (this.VehicleId != null &&
                    this.VehicleId.Equals(input.VehicleId))
                ) && 
                (
                    this.ClientId == input.ClientId ||
                    (this.ClientId != null &&
                    this.ClientId.Equals(input.ClientId))
                ) && 
                (
                    this.RentalInformationId == input.RentalInformationId ||
                    (this.RentalInformationId != null &&
                    this.RentalInformationId.Equals(input.RentalInformationId))
                ) && 
                (
                    this.RefundInformationId == input.RefundInformationId ||
                    (this.RefundInformationId != null &&
                    this.RefundInformationId.Equals(input.RefundInformationId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.VehicleId != null)
                    hashCode = hashCode * 59 + this.VehicleId.GetHashCode();
                if (this.ClientId != null)
                    hashCode = hashCode * 59 + this.ClientId.GetHashCode();
                if (this.RentalInformationId != null)
                    hashCode = hashCode * 59 + this.RentalInformationId.GetHashCode();
                if (this.RefundInformationId != null)
                    hashCode = hashCode * 59 + this.RefundInformationId.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
